#!/bin/bash

set -e

echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
sudo apt update
sudo apt install -y qemu-kvm libvirt-daemon-system libvirt-clients virtinst virt-manager ansible python3-libvirt

echo "üë§ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É libvirt..."
sudo usermod -aG libvirt "$USER"

echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ—Å—Ç–∞ br0..."
if ! ip link show br0 > /dev/null 2>&1; then
  echo "üîß –ú–æ—Å—Ç br0 –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º..."

  # –£—Ç–æ—á–Ω–∏, –∫–∞–∫–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, eth0 –∏–ª–∏ enp1s0)
  # –ó–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º eth0
  read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –º–æ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, eth0): " phys_iface

  # –°–æ–∑–¥–∞–Ω–∏–µ Netplan-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–¥–ª—è Ubuntu 18.04+)
  sudo bash -c "cat > /etc/netplan/01-br0.yaml" <<EOF
network:
  version: 2
  renderer: networkd
  ethernets:
    ${phys_iface}:
      dhcp4: no
  bridges:
    br0:
      interfaces: [${phys_iface}]
      dhcp4: yes
EOF

  echo "üíæ –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏..."
  sudo netplan apply
else
  echo "‚úÖ –ú–æ—Å—Ç br0 —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
fi

echo "üìÅ –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p ~/kvm_vm_automation/{roles/create_vm/{tasks,templates},}
cd ~/kvm_vm_automation

echo "üóÇÔ∏è –°–æ–∑–¥–∞—ë–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–Ω—ã–π —Ñ–∞–π–ª..."
cat <<EOF > inventory
localhost ansible_connection=local
EOF

echo "üìú –°–æ–∑–¥–∞—ë–º Ansible playbook..."
cat <<EOF > create_vms.yml
- name: Create VMs from QCOW2 template
  hosts: localhost
  gather_facts: no

  vars_prompt:
    - name: vm_base_name
      prompt: "–í–≤–µ–¥–∏—Ç–µ –±–∞–∑–æ–≤–æ–µ –∏–º—è –í–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, vm)"
      private: no
    - name: vm_count
      prompt: "–°–∫–æ–ª—å–∫–æ –í–ú —Å–æ–∑–¥–∞—Ç—å?"
      private: no
    - name: qcow2_image
      prompt: "–ü—É—Ç—å –∫ –æ–±—Ä–∞–∑—É QCOW2?"
      private: no

  tasks:
    - name: –°–æ–∑–¥–∞—Ç—å XML-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –í–ú
      template:
        src: roles/create_vm/templates/vm.xml.j2
        dest: "/tmp/{{ vm_base_name }}{{ item }}.xml"
      loop: "{{ range(1, vm_count | int + 1) | list }}"

    - name: –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É
      community.libvirt.virt:
        command: define
        xml: "/tmp/{{ vm_base_name }}{{ item }}.xml"
      loop: "{{ range(1, vm_count | int + 1) | list }}"

    - name: –ó–∞–ø—É—Å—Ç–∏—Ç—å –í–ú
      community.libvirt.virt:
        name: "{{ vm_base_name }}{{ item }}"
        state: running
      loop: "{{ range(1, vm_count | int + 1) | list }}"

    - name: –£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ XML —Ñ–∞–π–ª—ã
      file:
        path: "/tmp/{{ vm_base_name }}{{ item }}.xml"
        state: absent
      loop: "{{ range(1, vm_count | int + 1) | list }}"
EOF

echo "üìÑ –°–æ–∑–¥–∞—ë–º —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –í–ú..."
cat <<EOF > roles/create_vm/templates/vm.xml.j2
<domain type='kvm'>
  <name>{{ vm_base_name }}{{ item }}</name>
  <memory unit='MiB'>2048</memory>
  <vcpu placement='static'>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>
  </os>
  <devices>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='{{ qcow2_image }}'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='br0'/>
      <model type='virtio'/>
    </interface>
    <graphics type='vnc' port='-1' listen='0.0.0.0'/>
  </devices>
</domain>
EOF

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –í–ú, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "  cd ~/kvm_vm_automation"
echo "  ansible-playbook -i inventory create_vms.yml"

echo "üí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ bridge 'br0', –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω."
